#Dataset from :- https://www.kaggle.com/andonians/random-linear-regression



#!/usr/bin/env python
# coding: utf-8

# In[191]:


import pandas as pd


# In[192]:


df=pd.read_csv("H:\\csvs\\randomly created dataset\\train.csv")


# In[193]:


print(df.shape)
df.head()


# In[194]:


df[df['y'].isnull()]


# In[195]:


for i in range (212,220):
    

    print(df[df.index==i])


# In[196]:


df[df['x']>300]


# In[197]:


df.drop(index=213,inplace=True)


# In[214]:


import matplotlib.pyplot as plt
plt.scatter(df['x'],df['y'])
plt.show()


# In[215]:


from sklearn.preprocessing import StandardScaler


# In[216]:


sc1=StandardScaler()
X=sc1.fit_transform(df['x'].values.reshape(-1,1))

sc2=StandardScaler()
Y=sc2.fit_transform(df['y'].values.reshape(-1,1))


# In[217]:


from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error


# In[218]:


regressor= LinearRegression()


# In[219]:


model=regressor.fit(X,Y)


# In[ ]:





# In[220]:


error=mean_squared_error(Y,regressor.predict(X))


# In[221]:


error


# In[222]:


print(model.coef_)
print(model.intercept_)


# In[ ]:





# In[ ]:





# In[223]:


df1=pd.read_csv("H:\\csvs\\randomly created dataset\\test.csv")


# In[231]:


testX=np.array(df1['x']).reshape(-1,1)
testY= np.array(df1['y']).reshape(-1,1)

sc1=StandardScaler()
X=sc1.fit_transform(testX.reshape(-1,1))

sc2=StandardScaler()
Y=sc2.fit_transform(testY.reshape(-1,1))


# In[232]:


result = regressor.predict(X)


# In[233]:


error_with_test= mean_squared_error(result,Y)


# In[234]:


error_with_test


# In[235]:


plt.scatter(sc1.inverse_transform(X),sc2.inverse_transform(Y))
plt.show()


# In[237]:


print(sc2.inverse_transform(result))


# In[ ]:




